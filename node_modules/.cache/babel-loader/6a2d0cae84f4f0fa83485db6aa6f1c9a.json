{"ast":null,"code":"import _objectSpread from \"/home/dragana/Desktop/igra_na_srecu/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nvar _jsxFileName = \"/home/dragana/Desktop/igra_na_srecu/src/App.js\";\nimport React from 'react';\nimport './App.css';\nconst numbers = [];\nconst min = 1;\nconst max = 30;\nconst randomNumbers = [];\n\nfor (let i = 1; i < 31; i++) {\n  numbers.push(i);\n}\n\nfor (let i = 0; i < 12; i++) {\n  randomNumbers[i] = Math.floor(min + Math.random() * (max - min));\n}\n\nconsole.log(randomNumbers);\n\nclass App extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      ticket: [],\n      tickets: [],\n      numberTicket: 0,\n      number: null,\n      random: [],\n      isPlaying: false,\n      test: []\n    };\n    this.makeTicket = this.makeTicket.bind(this);\n    this.addTicket = this.addTicket.bind(this);\n  }\n\n  makeTicket(e) {\n    e.preventDefault();\n    const validateTicket = this.state.numberTicket;\n    const ticketInProgres = this.state.ticket;\n\n    if (validateTicket < 5 && ticketInProgres.length < 5) {\n      const number = e.target.value;\n      this.setState({\n        number: number,\n        ticket: [...this.state.ticket, number]\n      });\n    }\n  }\n\n  addTicket(e) {\n    e.preventDefault();\n    const ticket = this.state.ticket;\n    const numberOfTickets = this.state.numberTicket;\n\n    if (numberOfTickets < 5 && ticket.length > 0) {\n      this.setState(_objectSpread({}, this.state, {\n        tickets: [...this.state.tickets, ticket],\n        ticket: [],\n        numberTicket: this.state.numberTicket + 1\n      }));\n    }\n  }\n\n  render() {\n    let id = this.state.number;\n    let element = document.getElementById(id);\n\n    if (id) {\n      element.style.backgroundColor = 'red';\n    }\n\n    const listItems = numbers.map((number, index) => React.createElement(\"button\", {\n      key: index,\n      value: number,\n      className: \"number\",\n      id: number,\n      onClick: this.makeTicket,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }, number));\n    const tickets = this.state.tickets;\n    const listTickets = tickets.map((ticket, index) => React.createElement(\"p\", {\n      key: index,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    }, ticket));\n    console.log(this.state.numberTicket);\n    console.log(this.state.test);\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"col border\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90\n      },\n      __self: this\n    }, React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91\n      },\n      __self: this\n    }, \"Izvla\\u010Denje\")), React.createElement(\"div\", {\n      className: \"col border\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    }, React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94\n      },\n      __self: this\n    }, \"Brojevi\"), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95\n      },\n      __self: this\n    }, listItems))), React.createElement(\"div\", {\n      className: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"col\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102\n      },\n      __self: this\n    }, listTickets), React.createElement(\"div\", {\n      className: \"col\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      type: \"button\",\n      className: \"btn btn-primary\",\n      id: this.state.numberTicket === 5 ? 'no' : '',\n      onClick: this.addTicket,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106\n      },\n      __self: this\n    }, \"Dodaj tiket\"), React.createElement(\"button\", {\n      type: \"button\",\n      className: \"btn btn-primary play\",\n      id: this.state.numberTicket === 5 ? 'yes' : '',\n      onClick: this.playTicket,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107\n      },\n      __self: this\n    }, \"Odigraj\"), React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108\n      },\n      __self: this\n    }, \"Odabrani brojevi su\"), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109\n      },\n      __self: this\n    }, this.state.ticket)))));\n  }\n\n}\n\nclass Counter extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      number: 1\n    };\n  }\n\n  componentDidMount() {\n    this.interval = setInterval(() => {\n      console.log(this.state.number, this.props.counter);\n\n      if (this.props.counter === 'double') {\n        this.setState({\n          number: this.state.number + this.state.number\n        });\n      } else {\n        this.setState({\n          number: this.state.number + 1\n        });\n      }\n    }, 1000);\n  }\n\n  componentWillUnmount() {\n    clearInterval(this.interval);\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141\n      },\n      __self: this\n    }, this.state.number), React.createElement(\"button\", {\n      onClick: this.props.onExit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142\n      },\n      __self: this\n    }, \"Exit\"));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/home/dragana/Desktop/igra_na_srecu/src/App.js"],"names":["React","numbers","min","max","randomNumbers","i","push","Math","floor","random","console","log","App","Component","constructor","state","ticket","tickets","numberTicket","number","isPlaying","test","makeTicket","bind","addTicket","e","preventDefault","validateTicket","ticketInProgres","length","target","value","setState","numberOfTickets","render","id","element","document","getElementById","style","backgroundColor","listItems","map","index","listTickets","playTicket","Counter","props","componentDidMount","interval","setInterval","counter","componentWillUnmount","clearInterval","onExit"],"mappings":"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","sourcesContent":["import React from 'react';\nimport './App.css';\n\nconst numbers = [];\nconst min = 1;\nconst max = 30;\nconst randomNumbers = [];\n\nfor (let i=1; i<31; i++) {\n  numbers.push(i)\n}\n\nfor(let i = 0; i<12; i++){\n  randomNumbers[i]=Math.floor(min + Math.random() * (max - min));\n\n }\n\n\nconsole.log(randomNumbers);\nclass App extends React.Component {\n  constructor() {\n    super();\n\n    this.state= {\n      ticket: [],\n      tickets: [],\n      numberTicket: 0,\n      number: null, \n      random: [],\n      isPlaying: false,\n      test: []\n    }\n\n    this.makeTicket=this.makeTicket.bind(this);\n    this.addTicket=this.addTicket.bind(this);\n  }\n\n  makeTicket(e) {\n    e.preventDefault();\n    const validateTicket = this.state.numberTicket;\n    const ticketInProgres = this.state.ticket;\n      if(validateTicket <5 && ticketInProgres.length < 5) {\n      const number = e.target.value;\n        this.setState({\n        number: number,\n        ticket: [...this.state.ticket, number]\n        })\n      } \n    \n  }\n\n  addTicket(e) {\n    e.preventDefault();\n    const ticket =this.state.ticket;\n    const numberOfTickets = this.state.numberTicket;\n    if (numberOfTickets<5 && ticket.length>0) {\n      this.setState({\n            ...this.state,\n            tickets: [...this.state.tickets, ticket ],\n            ticket: [],\n            numberTicket: this.state.numberTicket +1\n        })\n    }\n    \n  }\n\n\n  render() {\n    let id= this.state.number;\n    let element = document.getElementById(id);\n    if(id) {\n      element.style.backgroundColor='red'\n    }\n    \n    const listItems=numbers.map((number, index) => \n       <button key={index} value={number} className=\"number\" id={number} onClick={this.makeTicket}>{number}</button>\n        );\n    const tickets=this.state.tickets;\n    const listTickets= tickets.map((ticket, index) => <p key={index}>{ticket}</p>);\n\n    console.log(this.state.numberTicket);\n    console.log(this.state.test);\n  \n    \n    \n    return(\n      <div>\n        <div className=\"container\">\n          <div className=\"row\">\n          <div className=\"col border\">\n            <h2>Izvlačenje</h2>\n          </div>\n          <div className=\"col border\">\n            <h2>Brojevi</h2>\n          <div>\n          {listItems}\n          </div>\n          \n          </div>\n        </div>\n        <div className=\"row\">\n          <div className=\"col\">\n          {listTickets}\n          </div>\n          <div className=\"col\">\n          <button type=\"button\" className=\"btn btn-primary\" id={this.state.numberTicket === 5 ? 'no' : ''} onClick={this.addTicket}  >Dodaj tiket</button>\n          <button type=\"button\" className=\"btn btn-primary play\" id={this.state.numberTicket === 5 ? 'yes' : ''} onClick={this.playTicket}>Odigraj</button>\n          <h3>Odabrani brojevi su</h3>\n          <p>{this.state.ticket}</p>\n          </div>\n        </div>\n      </div>\n      </div>)\n  }\n}\n\nclass Counter extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {number: 1};\n  }\n  \n  componentDidMount() {\n    this.interval = setInterval(() => {\n      console.log(this.state.number, this.props.counter)\n      if (this.props.counter === 'double') {\n        this.setState({number: this.state.number + this.state.number});        \n      } else {\n        this.setState({number: this.state.number + 1});\n      }\n    }, 1000);\n  }\n  \n  componentWillUnmount() {\n    clearInterval(this.interval);\n  }\n  \n  render() {\n    return (\n      <div>\n        <h1>{this.state.number}</h1>\n        <button onClick={this.props.onExit}>Exit</button>\n      </div>\n    )\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}