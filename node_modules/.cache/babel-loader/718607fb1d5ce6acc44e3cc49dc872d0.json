{"ast":null,"code":"import _objectSpread from \"/home/dragana/Desktop/igra_na_srecu/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nvar _jsxFileName = \"/home/dragana/Desktop/igra_na_srecu/src/App.js\";\nimport React from 'react';\nimport './App.css';\n\nclass App extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      ticket: [],\n      bet: '',\n      betArray: [],\n      tickets: [],\n      numberTicket: 0,\n      number: null,\n      random: [],\n      isPlaying: false,\n      randomArray: [],\n      test: [],\n      constraint: false,\n      ticketsLength: [],\n      gain: [],\n      winingText: [],\n      emptyTicket: false,\n      noBets: false,\n      startNew: false\n    };\n    this.makeTicket = this.makeTicket.bind(this);\n    this.addTicket = this.addTicket.bind(this);\n    this.drawing = this.drawing.bind(this);\n    this.compare = this.compare.bind(this);\n    this.buttonColoring = this.buttonColoring.bind(this);\n    this.addBet = this.addBet.bind(this);\n    this.winner = this.winner.bind(this);\n    this.odds = this.odds.bind(this);\n    this.backOnStart = this.backOnStart.bind(this);\n  }\n\n  makeTicket(e) {\n    e.preventDefault();\n    const validateTicket = this.state.numberTicket;\n    const ticketInProgres = this.state.ticket;\n    const number = e.target.value;\n\n    if (validateTicket < 5 && ticketInProgres.length < 5 && !ticketInProgres.includes(number)) {\n      this.setState({\n        number: number,\n        ticket: [...this.state.ticket, number]\n      });\n    }\n  }\n\n  addBet(e) {\n    e.preventDefault();\n    const newBet = e.target.value;\n\n    if (/^\\d+$/.test(newBet) && newBet < 1000) {\n      this.setState({\n        constraint: false,\n        bet: newBet\n      });\n    } else {\n      this.setState({\n        constraint: true\n      });\n    }\n  }\n\n  addTicket(e) {\n    e.preventDefault();\n    const ticket = this.state.ticket;\n    const numberOfTickets = this.state.numberTicket;\n\n    if (numberOfTickets < 5 && ticket.length > 0 && this.state.bet > 0) {\n      this.setState(_objectSpread({}, this.state, {\n        tickets: [...this.state.tickets, ticket],\n        betArray: [...this.state.betArray, this.state.bet],\n        ticket: [],\n        bet: '',\n        numberTicket: this.state.numberTicket + 1,\n        ticketsLength: [...this.state.ticketsLength, ticket.length],\n        emptyTicket: false,\n        noBets: false\n      }));\n    } else if (ticket.length === 0) {\n      this.setState({\n        emptyTicket: true\n      });\n    } else {\n      this.setState({\n        noBets: true,\n        emptyTicket: false\n      });\n    }\n  }\n\n  drawing() {\n    this.interval = setInterval(() => {\n      if (this.state.randomArray.length < 12) {\n        let newNumber = Math.floor(1 + Math.random() * (30 - 1));\n        if (!this.state.randomArray.includes(newNumber)) this.setState({\n          randomArray: [...this.state.randomArray, newNumber]\n        });\n      } else {\n        clearInterval(this.interval);\n        this.compare(this.state.randomArray, this.state.tickets);\n      }\n    }, 1000);\n  }\n\n  compare(random, arr) {\n    let myArray = arr;\n    let firstArr = random;\n\n    for (let i = 0; i < myArray.length; i++) {\n      let joinedArray = myArray[i].join(',');\n      let newArray = joinedArray.split(',').map(x => parseInt(x, 10));\n      let presek = firstArr.filter(x => newArray.includes(x));\n\n      if (presek.length === newArray.length) {\n        this.setState({\n          test: [...this.state.test, true]\n        });\n      } else {\n        this.setState({\n          test: [...this.state.test, false]\n        });\n      }\n    }\n\n    this.winner();\n  }\n\n  winner() {\n    const testing = this.state.test;\n\n    for (let i = 0; i < 5; i++) {\n      let gain = this.odds(i) * this.state.betArray[i];\n\n      if (testing[i] === true) {\n        this.setState({\n          gain: [...this.state.gain, gain]\n        });\n        let element = document.getElementById('ticket' + i);\n        let elementT = document.getElementById('bet' + i);\n        element.style.backgroundColor = '#1cb51c';\n        elementT.style.backgroundColor = '#1cb51c';\n      } else {\n        this.setState({\n          gain: [...this.state.gain, 0]\n        });\n        let elementL = document.getElementById('ticket' + i);\n        let elementLT = document.getElementById('bet' + i);\n        elementL.style.backgroundColor = 'red';\n        elementLT.style.backgroundColor = 'red';\n      }\n    }\n\n    for (let i = 0; i < 5; i++) {\n      if (this.state.gain[i] > 0) {\n        this.setState({\n          winingText: [...this.state.winingText, 'Ticket ' + (i + 1) + ' is winnig ticket! You won ' + this.state.gain[i] + '$']\n        });\n      }\n    }\n\n    this.backOnStart();\n  }\n\n  buttonColoring(number) {\n    if (number === 1 || number === 9 || number === 17 || number === 25) {\n      return 'borderGreen';\n    } else if (number === 2 || number === 10 || number === 18 || number === 26) {\n      return 'borderBlue';\n    } else if (number === 3 || number === 11 || number === 19 || number === 27) {\n      return 'borderRed';\n    } else if (number === 4 || number === 12 || number === 20 || number === 28) {\n      return 'borderViolet';\n    } else if (number === 5 || number === 13 || number === 21 || number === 29) {\n      return 'borderYellow';\n    } else if (number === 6 || number === 14 || number === 22 || number === 30) {\n      return 'borderOgrange';\n    } else if (number === 7 || number === 15 || number === 23) {\n      return 'borderBrown';\n    } else {\n      return 'borderGray';\n    }\n  }\n\n  odds(index) {\n    const odds1 = 4;\n    const odds2 = 8;\n    const odds3 = 12;\n    const odds4 = 16;\n    const odds5 = 20;\n\n    if (this.state.ticketsLength[index] === 1) {\n      return odds1;\n    } else if (this.state.ticketsLength[index] === 2) {\n      return odds2;\n    } else if (this.state.ticketsLength[index] === 3) {\n      return odds3;\n    } else if (this.state.ticketsLength[index] === 2) {\n      return odds4;\n    } else {\n      return odds5;\n    }\n  }\n\n  backOnStart() {\n    setTimeout(() => {\n      for (let i = 1; i < 31; i++) {\n        let element = document.getElementById(i);\n        element.style.backgroundColor = '#27671b';\n        element.style.borderColor = '#27671b';\n      }\n\n      ;\n      this.setState({\n        ticket: [],\n        bet: '',\n        betArray: [],\n        tickets: [],\n        numberTicket: 0,\n        number: null,\n        random: [],\n        isPlaying: false,\n        randomArray: [],\n        test: [],\n        constraint: false,\n        ticketsLength: [],\n        gain: [],\n        winingText: [],\n        emptyTicket: false,\n        noBets: false\n      });\n    }, 10000);\n  }\n\n  render() {\n    let id = this.state.number;\n    let element = document.getElementById(id);\n\n    if (id) {\n      element.style.backgroundColor = '#ff8c1a';\n      element.style.borderColor = '#ff8c1a';\n    }\n\n    const numbers = [];\n\n    for (let i = 1; i < 31; i++) {\n      numbers.push(i);\n    }\n\n    const listItems = numbers.map((number, index) => React.createElement(\"button\", {\n      key: index,\n      value: number,\n      className: \"number green\",\n      id: number,\n      onClick: this.makeTicket,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 251\n      },\n      __self: this\n    }, number));\n    const showBet = this.state.betArray.map((bet, index) => React.createElement(\"div\", {\n      key: index,\n      id: 'bet' + index,\n      className: \"height50\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 254\n      },\n      __self: this\n    }, 'bet: ' + bet + '$   odds: ' + this.odds(index)));\n    const tickets = this.state.tickets;\n    const listTickets = tickets.map((ticket, index) => React.createElement(\"li\", {\n      key: index,\n      id: 'ticket' + index,\n      className: \"height50\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 256\n      },\n      __self: this\n    }, ticket.map((number, index) => React.createElement(\"button\", {\n      key: index,\n      value: number,\n      className: \"numbersOnTicket\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 258\n      },\n      __self: this\n    }, number))));\n    const randomArray = this.state.randomArray;\n    const showArray = randomArray.map((array, index) => React.createElement(\"button\", {\n      key: index,\n      className: 'number nocursor ' + this.buttonColoring(array),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 262\n      },\n      __self: this\n    }, array));\n    const currentNumbers = this.state.ticket;\n    const pickedNumbers = currentNumbers.map((num, index) => React.createElement(\"button\", {\n      key: index,\n      className: \"numbersOnTicket\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 265\n      },\n      __self: this\n    }, num));\n    const winner = this.state.winingText;\n    const anouceWiner = winner.map((text, index) => React.createElement(\"p\", {\n      key: index,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 268\n      },\n      __self: this\n    }, text));\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 270\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 271\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 272\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"col border lightbackgroundcolor\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 273\n      },\n      __self: this\n    }, React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 274\n      },\n      __self: this\n    }, \"Winning numbers\"), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 275\n      },\n      __self: this\n    }, showArray)), React.createElement(\"div\", {\n      className: \"col border\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 277\n      },\n      __self: this\n    }, React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 278\n      },\n      __self: this\n    }, \"Numbers\"), React.createElement(\"div\", {\n      className: \"pickNumber\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 279\n      },\n      __self: this\n    }, listItems))), React.createElement(\"div\", {\n      className: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 285\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"col\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 286\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"tickets\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 287\n      },\n      __self: this\n    }, React.createElement(\"ol\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 288\n      },\n      __self: this\n    }, listTickets)), React.createElement(\"div\", {\n      className: \"bets\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 290\n      },\n      __self: this\n    }, showBet)), React.createElement(\"div\", {\n      className: \"col\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 294\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"clearfix\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 295\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"sideBy leftFloat\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 296\n      },\n      __self: this\n    }, React.createElement(\"h3\", {\n      className: \"font20\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 297\n      },\n      __self: this\n    }, \"Selected number/s: \"), React.createElement(\"p\", {\n      className: \"heightR\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 298\n      },\n      __self: this\n    }, pickedNumbers)), React.createElement(\"div\", {\n      className: \"sideBy\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 300\n      },\n      __self: this\n    }, React.createElement(\"h4\", {\n      className: \"font20\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 301\n      },\n      __self: this\n    }, \"Place your bet here \", React.createElement(\"i\", {\n      className: \"fas fa-arrow-down\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 301\n      },\n      __self: this\n    })), React.createElement(\"input\", {\n      onChange: this.addBet,\n      value: this.state.bet,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 302\n      },\n      __self: this\n    }), React.createElement(\"p\", {\n      className: \"minMax\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 306\n      },\n      __self: this\n    }, \"min: 1$ max: 1000$\"))), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 309\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      type: \"button\",\n      className: \"btn btn-dark\",\n      id: this.state.numberTicket === 5 ? 'no' : '',\n      onClick: this.addTicket,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 310\n      },\n      __self: this\n    }, \"Add ticket\"), React.createElement(\"button\", {\n      type: \"button\",\n      className: \"btn btn-dark play\",\n      id: this.state.numberTicket === 5 ? 'yes' : '',\n      onClick: this.drawing,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 311\n      },\n      __self: this\n    }, \"Play\")), React.createElement(\"div\", {\n      className: \"notifications\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 314\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      className: this.state.constraint === true ? '' : 'play',\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 315\n      },\n      __self: this\n    }, \"Only numbers!\"), React.createElement(\"p\", {\n      className: this.state.emptyTicket === true ? '' : 'play',\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 316\n      },\n      __self: this\n    }, \"Select number/s for a ticket!\"), React.createElement(\"p\", {\n      className: this.state.noBets === true ? '' : 'play',\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 317\n      },\n      __self: this\n    }, \"Place your bet!\")), React.createElement(\"div\", {\n      className: \"info\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 320\n      },\n      __self: this\n    }, anouceWiner), React.createElement(\"h3\", {\n      className: this.state.startNew === true ? '' : 'play',\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 323\n      },\n      __self: this\n    }, \"New game starts after 10 seconds...\")))));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/home/dragana/Desktop/igra_na_srecu/src/App.js"],"names":["React","App","Component","constructor","state","ticket","bet","betArray","tickets","numberTicket","number","random","isPlaying","randomArray","test","constraint","ticketsLength","gain","winingText","emptyTicket","noBets","startNew","makeTicket","bind","addTicket","drawing","compare","buttonColoring","addBet","winner","odds","backOnStart","e","preventDefault","validateTicket","ticketInProgres","target","value","length","includes","setState","newBet","numberOfTickets","interval","setInterval","newNumber","Math","floor","clearInterval","arr","myArray","firstArr","i","joinedArray","join","newArray","split","map","x","parseInt","presek","filter","testing","element","document","getElementById","elementT","style","backgroundColor","elementL","elementLT","index","odds1","odds2","odds3","odds4","odds5","setTimeout","borderColor","render","id","numbers","push","listItems","showBet","listTickets","showArray","array","currentNumbers","pickedNumbers","num","anouceWiner","text"],"mappings":"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","sourcesContent":["import React from 'react';\nimport './App.css';\n\n\nclass App extends React.Component {\n  constructor() {\n    super();\n\n    this.state= {\n      ticket: [],\n      bet: '',\n      betArray: [],\n      tickets: [],\n      numberTicket: 0,\n      number: null, \n      random: [],\n      isPlaying: false,\n      randomArray: [],\n      test: [],\n      constraint: false,\n      ticketsLength: [],\n      gain: [],\n      winingText: [],\n      emptyTicket: false,\n      noBets: false,\n      startNew: false\n    }\n\n    this.makeTicket=this.makeTicket.bind(this);\n    this.addTicket=this.addTicket.bind(this);\n    this.drawing=this.drawing.bind(this);\n    this.compare=this.compare.bind(this);\n    this.buttonColoring=this.buttonColoring.bind(this);\n    this.addBet=this.addBet.bind(this);\n    this.winner=this.winner.bind(this);\n    this.odds=this.odds.bind(this);\n    this.backOnStart=this.backOnStart.bind(this);\n  }\n\n  makeTicket(e) {\n    e.preventDefault();\n    const validateTicket = this.state.numberTicket;\n    const ticketInProgres = this.state.ticket;\n    const number = e.target.value;\n      if(validateTicket <5 && ticketInProgres.length < 5 && !ticketInProgres.includes(number)) {\n        this.setState({\n        number: number,\n        ticket: [...this.state.ticket, number]\n        })\n      } \n    \n  }\n\n  addBet(e) {\n    e.preventDefault();\n    const newBet = e.target.value;\n    if (/^\\d+$/.test(newBet) && newBet<1000) {\n      this.setState({\n        constraint: false,\n        bet: newBet\n      })\n    } else {\n      this.setState({\n        constraint: true\n      })\n    }\n  }\n\n  addTicket(e) {\n    e.preventDefault();\n    const ticket =this.state.ticket;\n    const numberOfTickets = this.state.numberTicket;\n    if (numberOfTickets<5 && ticket.length>0 && this.state.bet>0) {\n      this.setState({\n            ...this.state,\n            tickets: [...this.state.tickets, ticket ],\n            betArray: [...this.state.betArray, this.state.bet],\n            ticket: [],\n            bet: '',\n            numberTicket: this.state.numberTicket +1,\n            ticketsLength: [...this.state.ticketsLength, ticket.length],\n            emptyTicket: false,\n            noBets: false\n        })\n    }else if(ticket.length===0) {\n    \tthis.setState({\n    \t\temptyTicket: true\n    \t})\n    } else {\n    \tthis.setState({\n    \t\tnoBets: true,\n    \t\temptyTicket: false\n    \t})\n    }\n  }\n\n  drawing() {\n    this.interval = setInterval(() => {  \n      if (this.state.randomArray.length < 12) {\n        let newNumber= Math.floor(1 + Math.random() * (30 - 1));\n        if(!this.state.randomArray.includes(newNumber))\n        this.setState({randomArray: [...this.state.randomArray, newNumber]});        \n      } else {\n        clearInterval(this.interval);\n        this.compare(this.state.randomArray, this.state.tickets);  \n      }\n    }, 1000);\n  }\n\n  compare(random, arr) {\n\n  let myArray = arr;\n  let firstArr = random;\n\n  for(let i = 0; i < myArray.length; i++){\n      let joinedArray= myArray[i].join(',');\n      let newArray = joinedArray.split(',').map(x => parseInt(x, 10))\n      let presek = firstArr.filter(x => newArray.includes(x));\n      if (presek.length === newArray.length){\n        this.setState({\n            test: [...this.state.test, true],\n          })\n      } else {\n        this.setState({\n            test: [...this.state.test, false],\n          })\n      }\n   } \n   this.winner();\n\n  }\n\n  winner() {\n    const testing= this.state.test;\n    for(let i=0; i<5; i++){\n      let gain= this.odds(i) * this.state.betArray[i];\n      if(testing[i]===true){\n        this.setState({\n          gain: [...this.state.gain, gain]\n        });\n        let element= document.getElementById('ticket'+i);\n        let elementT= document.getElementById('bet' +i);\n        element.style.backgroundColor= '#1cb51c';\n        elementT.style.backgroundColor= '#1cb51c';\n      } else {\n        this.setState({\n          gain: [...this.state.gain, 0]\n        });\n        let elementL= document.getElementById('ticket'+i);\n        let elementLT= document.getElementById('bet' +i);\n        elementL.style.backgroundColor= 'red';\n        elementLT.style.backgroundColor= 'red';\n      }\n    }\n    for(let i=0; i<5; i++){\n    if(this.state.gain[i]>0){\n      this.setState({\n        winingText: [...this.state.winingText, 'Ticket ' + (i+1) + ' is winnig ticket! You won ' + this.state.gain[i] + '$']\n      })\n    }\n  }\n\n  this.backOnStart();\n  }\n\n\n  buttonColoring(number) {\n    if(number===1 || number ===9 || number===17 || number === 25) {\n      return 'borderGreen'\n    }else if(number===2 || number ===10 || number===18 || number === 26){\n      return 'borderBlue'\n    }else if(number===3 || number ===11 || number===19 || number === 27){\n      return 'borderRed'\n    }else if(number===4 || number ===12 || number===20 || number === 28){\n      return 'borderViolet'\n    }else if(number===5 || number ===13 || number===21 || number === 29){\n      return 'borderYellow'\n    }else if(number===6 || number ===14 || number===22 || number === 30){\n      return 'borderOgrange'\n    }else if(number===7 || number ===15 || number===23){\n      return 'borderBrown'\n    }else {\n      return 'borderGray'\n    }\n  }\n\n  odds(index) {\n    const odds1= 4;\n    const odds2= 8;\n    const odds3= 12;\n    const odds4= 16;\n    const odds5= 20;\n\n      if(this.state.ticketsLength[index]===1){\n        return odds1\n      }else if(this.state.ticketsLength[index]===2){\n        return odds2\n      }else if(this.state.ticketsLength[index]===3){\n        return odds3\n      }else if(this.state.ticketsLength[index]===2){\n        return odds4\n      }else {\n        return odds5\n      }\n  }\n\n  backOnStart() {\n  \tsetTimeout(()=>{\n  \t\tfor (let i=1; i<31; i++) {\n        let element=document.getElementById(i);\n        element.style.backgroundColor='#27671b';\n        element.style.borderColor= '#27671b';\n    \t};\n  \t\tthis.setState({\n\t  \tticket: [],\n\t    bet: '',\n\t    betArray: [],\n\t    tickets: [],\n\t    numberTicket: 0,\n\t    number: null, \n\t    random: [],\n\t    isPlaying: false,\n\t    randomArray: [],\n\t    test: [],\n\t    constraint: false,\n\t    ticketsLength: [],\n\t    gain: [],\n\t    winingText: [],\n\t    emptyTicket: false,\n\t    noBets: false\n\t  \t})}\n  \t, 10000);\n  \t\n  }\n\n  render() {\n    let id= this.state.number;\n    let element = document.getElementById(id);\n    if(id) {\n      element.style.backgroundColor='#ff8c1a';\n      element.style.borderColor= '#ff8c1a';\n    }\n    \n    const numbers = [];\n\n    for (let i=1; i<31; i++) {\n      numbers.push(i);\n    }\n\n    const listItems=numbers.map((number, index) => \n       <button key={index} value={number} className=\"number green\" id={number} onClick={this.makeTicket}>{number}</button>\n        );\n    \n    const showBet = this.state.betArray.map((bet, index) => <div key={index} id={'bet'+(index)} className=\"height50\">{'bet: ' + (bet) + '$   odds: ' + (this.odds(index))}</div>);\n    const tickets=this.state.tickets;\n    const listTickets= tickets.map((ticket, index) => <li key={index} id={'ticket'+(index)} className=\"height50\">{\n      ticket.map((number, index)=>\n        <button key={index} value={number} className=\"numbersOnTicket\">{number}</button>)}</li>\n        );\n   \n    const randomArray =this.state.randomArray;\n    const showArray=randomArray.map((array, index)=> <button key={index} className={'number nocursor ' +  (this.buttonColoring(array))}>{array}</button>);\n\n    const currentNumbers= this.state.ticket;\n    const pickedNumbers= currentNumbers.map((num, index) => <button key={index} className=\"numbersOnTicket\">{num}</button>);\n    \n    const winner= this.state.winingText;\n    const anouceWiner = winner.map((text, index) => <p key={index}>{text}</p>);\n    return(\n      <div>\n        <div className=\"container\">\n          <div className=\"row\">\n          <div className=\"col border lightbackgroundcolor\">\n            <h2>Winning numbers</h2>\n            <p>{showArray}</p>\n          </div>\n          <div className=\"col border\">\n            <h2>Numbers</h2>\n            <div className=\"pickNumber\">\n            {listItems}\n            </div>\n          \n          </div>\n        </div>\n        <div className=\"row\">\n          <div className=\"col\">\n            <div className=\"tickets\">\n            <ol>{listTickets}</ol>\n            </div>\n            <div className=\"bets\">\n            {showBet}\n            </div>\n          </div>\n          <div className=\"col\">\n          <div className=\"clearfix\">\n            <div className=\"sideBy leftFloat\">\n            <h3 className=\"font20\">Selected number/s: </h3>\n            <p className=\"heightR\">{pickedNumbers}</p>\n            </div>\n            <div className=\"sideBy\">\n            <h4 className=\"font20\">Place your bet here <i className=\"fas fa-arrow-down\"></i></h4>\n            <input \n                onChange={this.addBet}\n                value={this.state.bet}\n              />\n             <p className=\"minMax\">min: 1$ max: 1000$</p>\n            </div>\n           </div>\n            <div>\n            <button type=\"button\" className=\"btn btn-dark\" id={this.state.numberTicket === 5 ? 'no' : ''} onClick={this.addTicket}  >Add ticket</button>\n            <button type=\"button\" className=\"btn btn-dark play\" id={this.state.numberTicket === 5 ? 'yes' : ''} onClick={this.drawing}>Play</button>\n            </div>\n\n            <div className=\"notifications\">\n              <p className={this.state.constraint === true? '' : 'play'}>Only numbers!</p>\n              <p className={this.state.emptyTicket === true? '' : 'play'}>Select number/s for a ticket!</p>\n              <p className={this.state.noBets === true? '' : 'play'}>Place your bet!</p>\n            </div>\n\n            <div className=\"info\">\n            {anouceWiner}\n            </div>\n            <h3 className={this.state.startNew === true? '' : 'play'}>New game starts after 10 seconds...</h3>\n          </div>\n        </div>\n      </div>\n      </div>)\n  }\n}\n\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}